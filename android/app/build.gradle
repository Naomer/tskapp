buildscript {
    ext.kotlin_version = '1.9.0'
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def mapsApiKey = localProperties.getProperty('MAPS_API_KEY')
if (mapsApiKey == null) {
    throw new GradleException("Maps API key not found. Define MAPS_API_KEY in the local.properties file.")
}

// Load .env file
def envFile = new File("$projectDir/../../.env")
def envProperties = new Properties()
if (envFile.exists()) {
    envFile.withReader('UTF-8') { reader ->
        envProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

kotlin {
    jvmToolchain(17)
}

android {
    namespace "com.example.task_app"
    compileSdk 35
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.example.task_app"
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion 35
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        
        // Set the API key from .env file
        resValue "string", "GOOGLE_MAPS_ANDROID_API_KEY", envProperties.getProperty('GOOGLE_MAPS_ANDROID_API_KEY', '')
        
        manifestPlaceholders = [
            MAPS_API_KEY: mapsApiKey
        ]
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug
        }
    }

    lintOptions {
        disable 'InvalidPackage'
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}
